# -*- coding: utf-8 -*-

"""
mdnotesccg

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from mdnotesccg.decorators import lazy_property
from mdnotesccg.configuration import Configuration
from mdnotesccg.configuration import Environment
from mdnotesccg.http.auth.o_auth_2 import OAuth2
from mdnotesccg.controllers.user_controller import UserController
from mdnotesccg.controllers.service_controller import ServiceController
from mdnotesccg.controllers.o_auth_authorization_controller\
    import OAuthAuthorizationController


class MdnotesccgClient(object):

    auth = OAuth2

    @lazy_property
    def user(self):
        return UserController(self.config)

    @lazy_property
    def service(self):
        return ServiceController(self.config)

    @lazy_property
    def o_auth_authorization(self):
        return OAuthAuthorizationController(self.config)

    def __init__(self, timeout=60, max_retries=0, backoff_factor=2,
                 retry_statuses=[408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
                 retry_methods=['GET', 'PUT'],
                 environment=Environment.PRODUCTION,
                 o_auth_client_id='TODO: Replace',
                 o_auth_client_secret='TODO: Replace', o_auth_token=None,
                 config=None):
        if config is None:
            self.config = Configuration(timeout=timeout,
                                        max_retries=max_retries,
                                        backoff_factor=backoff_factor,
                                        retry_statuses=retry_statuses,
                                        retry_methods=retry_methods,
                                        environment=environment,
                                        o_auth_client_id=o_auth_client_id,
                                        o_auth_client_secret=o_auth_client_secret,
                                        o_auth_token=o_auth_token)
        else:
            self.config = config
